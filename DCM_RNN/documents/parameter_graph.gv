digraph G {
          splines=ortho;
          rankdir = "LR";
          node[fontsize=24];
          hemodynamic_parameter -> Wo;
          n_backpro;
          if_random_scan_time -> t_scan;
          initializer -> t_scan;
          if_random_neural_parameter -> C;
          n_node -> C;
          n_stimuli -> C;
          initializer -> C;
          learning_rate;
          if_random_neural_parameter -> Wx;
          n_node -> Wx;
          n_stimuli -> Wx;
          C -> Wx;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          t_delta -> A;
          if_random_neural_parameter -> A;
          n_node -> A;
          initializer -> A;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_neural_parameter -> B;
          n_node -> B;
          n_stimuli -> B;
          initializer -> B;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          hemodynamic_parameter -> Whh;
          t_delta -> Whh;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_stimuli -> u;
          n_stimuli -> u;
          n_time_point -> u;
          initializer -> u;
          hemodynamic_parameter -> bo;
          if_random_neural_parameter;
          t_scan -> n_time_point;
          t_delta -> n_time_point;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_stimuli_number;
          hemodynamic_parameter -> Whx;
          t_delta -> Whx;
          hemodynamic_parameter -> bh;
          t_delta -> bh;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_x_state_initial;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_stimuli;
          if_random_h_state_initial;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_neural_parameter -> Wxx;
          n_node -> Wxx;
          A -> Wxx;
          n_node -> initial_x_state;
          if_random_x_state_initial -> initial_x_state;
          initializer -> initial_x_state;
          n_node -> initial_h_state;
          if_random_h_state_initial -> initial_h_state;
          initializer -> initial_h_state;
          if_random_delta_t;
          if_random_neural_parameter -> initializer;
          if_random_hemodynamic_parameter -> initializer;
          if_random_x_state_initial -> initializer;
          if_random_h_state_initial -> initializer;
          if_random_stimuli -> initializer;
          if_random_node_number -> initializer;
          if_random_stimuli_number -> initializer;
          if_random_delta_t -> initializer;
          if_random_scan_time -> initializer;
          if_random_node_number -> n_node;
          initializer -> n_node;
          if_random_hemodynamic_parameter;
          if_random_neural_parameter -> Wxxu;
          n_node -> Wxxu;
          n_stimuli -> Wxxu;
          B -> Wxxu;
          if_random_scan_time;
          if_random_node_number;
          if_random_delta_t -> t_delta;
          initializer -> t_delta;
          n_node -> hemodynamic_parameter;
          if_random_hemodynamic_parameter -> hemodynamic_parameter;
          initializer -> hemodynamic_parameter;
          if_random_stimuli_number -> n_stimuli;
          n_node -> n_stimuli;
          initializer -> n_stimuli;
}