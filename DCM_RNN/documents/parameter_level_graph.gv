digraph G {
          splines=ortho;
          fontsize = 48;
          rankdir = "LR";
          node[fontsize=24];
          edge[penwidth=2];
          {
          node [shape=plaintext fontsize=36];
          inherited -> 
          level_0 -> 
          level_1 -> 
          level_2 -> 
          level_3 -> 
          level_4
          }
          {rank = same;
          inherited;
          initializer;
          }
          {rank = same;
          level_0;
          if_random_neural_parameter;
          if_random_hemodynamic_parameter;
          if_random_x_state_initial;
          if_random_h_state_initial;
          if_random_stimuli;
          if_random_node_number;
          if_random_stimuli_number;
          if_random_delta_t;
          if_random_scan_time;
          n_backpro;
          learning_rate;
          }
          {rank = same;
          level_1;
          n_node;
          t_delta;
          t_scan;
          }
          {rank = same;
          level_2;
          n_time_point;
          n_stimuli;
          A;
          hemodynamic_parameter;
          initial_x_state;
          initial_h_state;
          }
          {rank = same;
          level_3;
          u;
          B;
          C;
          Wxx;
          Whx;
          Whh;
          bh;
          Wo;
          bo;
          }
          {rank = same;
          level_4;
          Wxxu;
          Wxu;
          }
          if_random_scan_time -> t_scan [color="#B1A628"];
          B -> Wxxu [color="#AB5262"];
          if_random_x_state_initial -> initial_x_state [color="#A7B91A"];
          if_random_neural_parameter -> B [color="#00548C"];
          if_random_neural_parameter -> C [color="#00548C"];
          if_random_neural_parameter -> A [color="#00548C"];
          Wxx ;
          t_scan -> n_time_point [color="#A503E2"];
          n_stimuli -> B [color="#8A8343"];
          n_stimuli -> C [color="#8A8343"];
          n_stimuli -> u [color="#8A8343"];
          n_backpro ;
          bo ;
          C -> Wxu [color="#5400C2"];
          learning_rate ;
          initial_x_state ;
          Wxxu ;
          n_node -> B [color="#E7A5BA"];
          n_node -> n_stimuli [color="#E7A5BA"];
          n_node -> C [color="#E7A5BA"];
          n_node -> initial_x_state [color="#E7A5BA"];
          n_node -> initial_h_state [color="#E7A5BA"];
          n_node -> hemodynamic_parameter [color="#E7A5BA"];
          n_node -> A [color="#E7A5BA"];
          u ;
          initializer -> B [color="#63917C"];
          initializer -> n_node [color="#63917C"];
          initializer -> n_stimuli [color="#63917C"];
          initializer -> t_delta [color="#63917C"];
          initializer -> C [color="#63917C"];
          initializer -> initial_x_state [color="#63917C"];
          initializer -> initial_h_state [color="#63917C"];
          initializer -> hemodynamic_parameter [color="#63917C"];
          initializer -> u [color="#63917C"];
          initializer -> t_scan [color="#63917C"];
          initializer -> A [color="#63917C"];
          initial_h_state ;
          hemodynamic_parameter -> bo [color="#6197A5"];
          hemodynamic_parameter -> Whx [color="#6197A5"];
          hemodynamic_parameter -> bh [color="#6197A5"];
          hemodynamic_parameter -> Wo [color="#6197A5"];
          hemodynamic_parameter -> Whh [color="#6197A5"];
          Wxu ;
          if_random_hemodynamic_parameter -> hemodynamic_parameter [color="#51C660"];
          Wo ;
          t_delta -> Wxx [color="#4622EA"];
          t_delta -> Wxxu [color="#4622EA"];
          t_delta -> Whx [color="#4622EA"];
          t_delta -> bh [color="#4622EA"];
          t_delta -> Wxu [color="#4622EA"];
          t_delta -> n_time_point [color="#4622EA"];
          t_delta -> A [color="#4622EA"];
          t_delta -> Whh [color="#4622EA"];
          Whx ;
          bh ;
          n_time_point -> u [color="#36AB2B"];
          if_random_stimuli -> u [color="#187120"];
          if_random_delta_t -> t_delta [color="#986041"];
          A -> Wxx [color="#392692"];
          if_random_stimuli_number -> n_stimuli [color="#03C341"];
          Whh ;
          if_random_h_state_initial -> initial_h_state [color="#BA9827"];
          if_random_node_number -> n_node [color="#00CA29"];
          labelloc = "t";
          label = "parameter_level_graph";
}